PSPSDK=$(shell psp-config --pspsdk-path)
INCDIR = $(PSPSDK)/include $(PROVITA)/common $(PROVITA)
LIBS= -ldebug -lansic -lpsid -lcolordebugger -L $(PROVITA)/libs
TARGET = k.bin

all: pre-build $(TARGET)

CFLAGS = -Wall -Os -G0 -fno-pic $(addprefix -I, $(INCDIR))

ifdef KERNEL_DUMP
	CFLAGS += -DKERNEL_DUMP=$(KERNEL_DUMP)
endif

ifdef FLASH_RESTORE
	CFLAGS += -DFLASH_RESTORE=$(FLASH_RESTORE)
endif

CFLAGS += -DGAME=$(GAME) -DSAVE=$(SAVE)

C_OBJS = main.o functions.o

ifdef FLASH_DUMP
	CFLAGS += -DFLASH_DUMP=$(FLASH_DUMP)
	C_OBJS += flash_dump.o
endif

ifndef KXPLOIT
ifeq ($(FIRMWARE), 200)
KXPLOIT = WLANDRV_LIB
else
KXPLOIT = WLAN_GET_ETHER_ADDR
endif
endif

ifeq ($(KXPLOIT), WLAN_GET_ETHER_ADDR)
C_OBJS += kxploit_wlangetetheraddr.o
else
ifeq ($(KXPLOIT), LOAD_CERT_FROM_FLASH)
C_OBJS += kxploit_loadcertfromflash.o
else
ifeq ($(KXPLOIT), WLANDRV_LIB)
C_OBJS += kxploit_wlandrvlib.o
else
ifeq ($(KXPLOIT), SD_GET_LAST_INDEX)
C_OBJS += kxploit_sceSdGetLastIndex.o
endif
endif
endif
endif

CFLAGS += -DKXPLOIT=$(KXPLOIT)

include $(PROVITA)/common/global.mak
include $(PROVITA)/common/beauty_bin.mak
include $(PROVITA)/common/exploit_config.mak

LINKFILE = link.l

# Firmware Version
CFLAGS += -DFIRMWARE=$(FIRMWARE)

ifdef DEBUG
CFLAGS += -DDEBUG=$(DEBUG)
endif

CC = psp-gcc
LD = psp-ld
STRIP = psp-strip
OBJCOPY = psp-objcopy

pre-build: link.l

cmd_genlink = python $(PROVITA)/contrib/PC/genlink/genlink.py $(EXPLOIT_LOADADDR) exploitEntry > $(LINKFILE)

link.l:
	$(Q)$(cmd_genlink)

main.elf: $(C_OBJS)

$(TARGET): main.elf
	$(Q)$(STRIP) -s $<
	$(Q)$(OBJCOPY) -O binary $< $@
	$(Q)python ../contrib/PC/psid/pspencrypt.py -eb $@ $(patsubst %.bin,%.enc.bin, $@) $(PSID)
	$(Q)bin2c $(patsubst %.bin,%.enc.bin, $@) exploit.h exploitbuffer
	@echo GET $@

clean:
	$(Q)rm -rf *~ *.s *.o *.elf k.bin k.enc.bin exploit.h link.l
